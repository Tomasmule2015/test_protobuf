// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace INF {

namespace {

const ::google::protobuf::Descriptor* INF_Desc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_Desc_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_Desc_INF_Base_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_Desc_INF_Base_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_Desc_INF_Feature_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_Desc_INF_Feature_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_request_2eproto() {
  protobuf_AddDesc_request_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "request.proto");
  GOOGLE_CHECK(file != NULL);
  INF_Desc_descriptor_ = file->message_type(0);
  static const int INF_Desc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc, inputnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc, base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc, feature_),
  };
  INF_Desc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      INF_Desc_descriptor_,
      INF_Desc::default_instance_,
      INF_Desc_offsets_,
      -1,
      -1,
      -1,
      sizeof(INF_Desc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc, _is_default_instance_));
  INF_Desc_INF_Base_descriptor_ = INF_Desc_descriptor_->nested_type(0);
  static const int INF_Desc_INF_Base_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Base, nbaseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Base, strbasename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Base, nbasethreashold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Base, nstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Base, nloadmode_),
  };
  INF_Desc_INF_Base_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      INF_Desc_INF_Base_descriptor_,
      INF_Desc_INF_Base::default_instance_,
      INF_Desc_INF_Base_offsets_,
      -1,
      -1,
      -1,
      sizeof(INF_Desc_INF_Base),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Base, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Base, _is_default_instance_));
  INF_Desc_INF_Feature_descriptor_ = INF_Desc_descriptor_->nested_type(1);
  static const int INF_Desc_INF_Feature_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Feature, nobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Feature, nobjectthreashold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Feature, nfeatureid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Feature, nfeaturethreashold_),
  };
  INF_Desc_INF_Feature_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      INF_Desc_INF_Feature_descriptor_,
      INF_Desc_INF_Feature::default_instance_,
      INF_Desc_INF_Feature_offsets_,
      -1,
      -1,
      -1,
      sizeof(INF_Desc_INF_Feature),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Feature, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Desc_INF_Feature, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_request_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      INF_Desc_descriptor_, &INF_Desc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      INF_Desc_INF_Base_descriptor_, &INF_Desc_INF_Base::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      INF_Desc_INF_Feature_descriptor_, &INF_Desc_INF_Feature::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_request_2eproto() {
  delete INF_Desc::default_instance_;
  delete INF_Desc_reflection_;
  delete INF_Desc_INF_Base::default_instance_;
  delete INF_Desc_INF_Base_reflection_;
  delete INF_Desc_INF_Feature::default_instance_;
  delete INF_Desc_INF_Feature_reflection_;
}

void protobuf_AddDesc_request_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rrequest.proto\022\003INF\"\312\002\n\010INF_Desc\022\020\n\010inp"
    "utnum\030\001 \001(\005\022$\n\004base\030\002 \003(\0132\026.INF.INF_Desc"
    ".INF_Base\022*\n\007feature\030\003 \003(\0132\031.INF.INF_Des"
    "c.INF_Feature\032m\n\010INF_Base\022\017\n\007nBaseID\030\001 \001"
    "(\003\022\023\n\013strBaseName\030\002 \001(\t\022\027\n\017nBaseThreasho"
    "ld\030\003 \001(\005\022\017\n\007nStatus\030\004 \001(\005\022\021\n\tnLoadMode\030\005"
    " \001(\005\032k\n\013INF_Feature\022\021\n\tnObjectID\030\001 \001(\003\022\031"
    "\n\021nObjectThreashold\030\002 \001(\005\022\022\n\nnFeatureID\030"
    "\003 \001(\003\022\032\n\022nFeatureThreashold\030\004 \001(\005b\006proto"
    "3", 361);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "request.proto", &protobuf_RegisterTypes);
  INF_Desc::default_instance_ = new INF_Desc();
  INF_Desc_INF_Base::default_instance_ = new INF_Desc_INF_Base();
  INF_Desc_INF_Feature::default_instance_ = new INF_Desc_INF_Feature();
  INF_Desc::default_instance_->InitAsDefaultInstance();
  INF_Desc_INF_Base::default_instance_->InitAsDefaultInstance();
  INF_Desc_INF_Feature::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_request_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_request_2eproto {
  StaticDescriptorInitializer_request_2eproto() {
    protobuf_AddDesc_request_2eproto();
  }
} static_descriptor_initializer_request_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int INF_Desc_INF_Base::kNBaseIDFieldNumber;
const int INF_Desc_INF_Base::kStrBaseNameFieldNumber;
const int INF_Desc_INF_Base::kNBaseThreasholdFieldNumber;
const int INF_Desc_INF_Base::kNStatusFieldNumber;
const int INF_Desc_INF_Base::kNLoadModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

INF_Desc_INF_Base::INF_Desc_INF_Base()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:INF.INF_Desc.INF_Base)
}

void INF_Desc_INF_Base::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

INF_Desc_INF_Base::INF_Desc_INF_Base(const INF_Desc_INF_Base& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:INF.INF_Desc.INF_Base)
}

void INF_Desc_INF_Base::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nbaseid_ = GOOGLE_LONGLONG(0);
  strbasename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nbasethreashold_ = 0;
  nstatus_ = 0;
  nloadmode_ = 0;
}

INF_Desc_INF_Base::~INF_Desc_INF_Base() {
  // @@protoc_insertion_point(destructor:INF.INF_Desc.INF_Base)
  SharedDtor();
}

void INF_Desc_INF_Base::SharedDtor() {
  strbasename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void INF_Desc_INF_Base::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_Desc_INF_Base::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_Desc_INF_Base_descriptor_;
}

const INF_Desc_INF_Base& INF_Desc_INF_Base::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_request_2eproto();
  return *default_instance_;
}

INF_Desc_INF_Base* INF_Desc_INF_Base::default_instance_ = NULL;

INF_Desc_INF_Base* INF_Desc_INF_Base::New(::google::protobuf::Arena* arena) const {
  INF_Desc_INF_Base* n = new INF_Desc_INF_Base;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void INF_Desc_INF_Base::Clear() {
// @@protoc_insertion_point(message_clear_start:INF.INF_Desc.INF_Base)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(INF_Desc_INF_Base, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<INF_Desc_INF_Base*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nbasethreashold_, nloadmode_);
  nbaseid_ = GOOGLE_LONGLONG(0);
  strbasename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool INF_Desc_INF_Base::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:INF.INF_Desc.INF_Base)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 nBaseID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nbaseid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strBaseName;
        break;
      }

      // optional string strBaseName = 2;
      case 2: {
        if (tag == 18) {
         parse_strBaseName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbasename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbasename().data(), this->strbasename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "INF.INF_Desc.INF_Base.strBaseName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nBaseThreashold;
        break;
      }

      // optional int32 nBaseThreashold = 3;
      case 3: {
        if (tag == 24) {
         parse_nBaseThreashold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbasethreashold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_nStatus;
        break;
      }

      // optional int32 nStatus = 4;
      case 4: {
        if (tag == 32) {
         parse_nStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nstatus_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_nLoadMode;
        break;
      }

      // optional int32 nLoadMode = 5;
      case 5: {
        if (tag == 40) {
         parse_nLoadMode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nloadmode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:INF.INF_Desc.INF_Base)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:INF.INF_Desc.INF_Base)
  return false;
#undef DO_
}

void INF_Desc_INF_Base::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:INF.INF_Desc.INF_Base)
  // optional int64 nBaseID = 1;
  if (this->nbaseid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->nbaseid(), output);
  }

  // optional string strBaseName = 2;
  if (this->strbasename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbasename().data(), this->strbasename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "INF.INF_Desc.INF_Base.strBaseName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strbasename(), output);
  }

  // optional int32 nBaseThreashold = 3;
  if (this->nbasethreashold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nbasethreashold(), output);
  }

  // optional int32 nStatus = 4;
  if (this->nstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nstatus(), output);
  }

  // optional int32 nLoadMode = 5;
  if (this->nloadmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->nloadmode(), output);
  }

  // @@protoc_insertion_point(serialize_end:INF.INF_Desc.INF_Base)
}

::google::protobuf::uint8* INF_Desc_INF_Base::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:INF.INF_Desc.INF_Base)
  // optional int64 nBaseID = 1;
  if (this->nbaseid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->nbaseid(), target);
  }

  // optional string strBaseName = 2;
  if (this->strbasename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbasename().data(), this->strbasename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "INF.INF_Desc.INF_Base.strBaseName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbasename(), target);
  }

  // optional int32 nBaseThreashold = 3;
  if (this->nbasethreashold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nbasethreashold(), target);
  }

  // optional int32 nStatus = 4;
  if (this->nstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nstatus(), target);
  }

  // optional int32 nLoadMode = 5;
  if (this->nloadmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->nloadmode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:INF.INF_Desc.INF_Base)
  return target;
}

int INF_Desc_INF_Base::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:INF.INF_Desc.INF_Base)
  int total_size = 0;

  // optional int64 nBaseID = 1;
  if (this->nbaseid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nbaseid());
  }

  // optional string strBaseName = 2;
  if (this->strbasename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbasename());
  }

  // optional int32 nBaseThreashold = 3;
  if (this->nbasethreashold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nbasethreashold());
  }

  // optional int32 nStatus = 4;
  if (this->nstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nstatus());
  }

  // optional int32 nLoadMode = 5;
  if (this->nloadmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nloadmode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_Desc_INF_Base::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:INF.INF_Desc.INF_Base)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const INF_Desc_INF_Base* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const INF_Desc_INF_Base>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:INF.INF_Desc.INF_Base)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:INF.INF_Desc.INF_Base)
    MergeFrom(*source);
  }
}

void INF_Desc_INF_Base::MergeFrom(const INF_Desc_INF_Base& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:INF.INF_Desc.INF_Base)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.nbaseid() != 0) {
    set_nbaseid(from.nbaseid());
  }
  if (from.strbasename().size() > 0) {

    strbasename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbasename_);
  }
  if (from.nbasethreashold() != 0) {
    set_nbasethreashold(from.nbasethreashold());
  }
  if (from.nstatus() != 0) {
    set_nstatus(from.nstatus());
  }
  if (from.nloadmode() != 0) {
    set_nloadmode(from.nloadmode());
  }
}

void INF_Desc_INF_Base::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:INF.INF_Desc.INF_Base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_Desc_INF_Base::CopyFrom(const INF_Desc_INF_Base& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:INF.INF_Desc.INF_Base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_Desc_INF_Base::IsInitialized() const {

  return true;
}

void INF_Desc_INF_Base::Swap(INF_Desc_INF_Base* other) {
  if (other == this) return;
  InternalSwap(other);
}
void INF_Desc_INF_Base::InternalSwap(INF_Desc_INF_Base* other) {
  std::swap(nbaseid_, other->nbaseid_);
  strbasename_.Swap(&other->strbasename_);
  std::swap(nbasethreashold_, other->nbasethreashold_);
  std::swap(nstatus_, other->nstatus_);
  std::swap(nloadmode_, other->nloadmode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata INF_Desc_INF_Base::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_Desc_INF_Base_descriptor_;
  metadata.reflection = INF_Desc_INF_Base_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int INF_Desc_INF_Feature::kNObjectIDFieldNumber;
const int INF_Desc_INF_Feature::kNObjectThreasholdFieldNumber;
const int INF_Desc_INF_Feature::kNFeatureIDFieldNumber;
const int INF_Desc_INF_Feature::kNFeatureThreasholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

INF_Desc_INF_Feature::INF_Desc_INF_Feature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:INF.INF_Desc.INF_Feature)
}

void INF_Desc_INF_Feature::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

INF_Desc_INF_Feature::INF_Desc_INF_Feature(const INF_Desc_INF_Feature& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:INF.INF_Desc.INF_Feature)
}

void INF_Desc_INF_Feature::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  nobjectid_ = GOOGLE_LONGLONG(0);
  nobjectthreashold_ = 0;
  nfeatureid_ = GOOGLE_LONGLONG(0);
  nfeaturethreashold_ = 0;
}

INF_Desc_INF_Feature::~INF_Desc_INF_Feature() {
  // @@protoc_insertion_point(destructor:INF.INF_Desc.INF_Feature)
  SharedDtor();
}

void INF_Desc_INF_Feature::SharedDtor() {
  if (this != default_instance_) {
  }
}

void INF_Desc_INF_Feature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_Desc_INF_Feature::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_Desc_INF_Feature_descriptor_;
}

const INF_Desc_INF_Feature& INF_Desc_INF_Feature::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_request_2eproto();
  return *default_instance_;
}

INF_Desc_INF_Feature* INF_Desc_INF_Feature::default_instance_ = NULL;

INF_Desc_INF_Feature* INF_Desc_INF_Feature::New(::google::protobuf::Arena* arena) const {
  INF_Desc_INF_Feature* n = new INF_Desc_INF_Feature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void INF_Desc_INF_Feature::Clear() {
// @@protoc_insertion_point(message_clear_start:INF.INF_Desc.INF_Feature)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(INF_Desc_INF_Feature, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<INF_Desc_INF_Feature*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nobjectid_, nfeaturethreashold_);

#undef ZR_HELPER_
#undef ZR_

}

bool INF_Desc_INF_Feature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:INF.INF_Desc.INF_Feature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 nObjectID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nobjectid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nObjectThreashold;
        break;
      }

      // optional int32 nObjectThreashold = 2;
      case 2: {
        if (tag == 16) {
         parse_nObjectThreashold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nobjectthreashold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nFeatureID;
        break;
      }

      // optional int64 nFeatureID = 3;
      case 3: {
        if (tag == 24) {
         parse_nFeatureID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nfeatureid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_nFeatureThreashold;
        break;
      }

      // optional int32 nFeatureThreashold = 4;
      case 4: {
        if (tag == 32) {
         parse_nFeatureThreashold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nfeaturethreashold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:INF.INF_Desc.INF_Feature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:INF.INF_Desc.INF_Feature)
  return false;
#undef DO_
}

void INF_Desc_INF_Feature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:INF.INF_Desc.INF_Feature)
  // optional int64 nObjectID = 1;
  if (this->nobjectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->nobjectid(), output);
  }

  // optional int32 nObjectThreashold = 2;
  if (this->nobjectthreashold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nobjectthreashold(), output);
  }

  // optional int64 nFeatureID = 3;
  if (this->nfeatureid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->nfeatureid(), output);
  }

  // optional int32 nFeatureThreashold = 4;
  if (this->nfeaturethreashold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nfeaturethreashold(), output);
  }

  // @@protoc_insertion_point(serialize_end:INF.INF_Desc.INF_Feature)
}

::google::protobuf::uint8* INF_Desc_INF_Feature::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:INF.INF_Desc.INF_Feature)
  // optional int64 nObjectID = 1;
  if (this->nobjectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->nobjectid(), target);
  }

  // optional int32 nObjectThreashold = 2;
  if (this->nobjectthreashold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nobjectthreashold(), target);
  }

  // optional int64 nFeatureID = 3;
  if (this->nfeatureid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->nfeatureid(), target);
  }

  // optional int32 nFeatureThreashold = 4;
  if (this->nfeaturethreashold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nfeaturethreashold(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:INF.INF_Desc.INF_Feature)
  return target;
}

int INF_Desc_INF_Feature::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:INF.INF_Desc.INF_Feature)
  int total_size = 0;

  // optional int64 nObjectID = 1;
  if (this->nobjectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nobjectid());
  }

  // optional int32 nObjectThreashold = 2;
  if (this->nobjectthreashold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nobjectthreashold());
  }

  // optional int64 nFeatureID = 3;
  if (this->nfeatureid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nfeatureid());
  }

  // optional int32 nFeatureThreashold = 4;
  if (this->nfeaturethreashold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nfeaturethreashold());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_Desc_INF_Feature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:INF.INF_Desc.INF_Feature)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const INF_Desc_INF_Feature* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const INF_Desc_INF_Feature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:INF.INF_Desc.INF_Feature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:INF.INF_Desc.INF_Feature)
    MergeFrom(*source);
  }
}

void INF_Desc_INF_Feature::MergeFrom(const INF_Desc_INF_Feature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:INF.INF_Desc.INF_Feature)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.nobjectid() != 0) {
    set_nobjectid(from.nobjectid());
  }
  if (from.nobjectthreashold() != 0) {
    set_nobjectthreashold(from.nobjectthreashold());
  }
  if (from.nfeatureid() != 0) {
    set_nfeatureid(from.nfeatureid());
  }
  if (from.nfeaturethreashold() != 0) {
    set_nfeaturethreashold(from.nfeaturethreashold());
  }
}

void INF_Desc_INF_Feature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:INF.INF_Desc.INF_Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_Desc_INF_Feature::CopyFrom(const INF_Desc_INF_Feature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:INF.INF_Desc.INF_Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_Desc_INF_Feature::IsInitialized() const {

  return true;
}

void INF_Desc_INF_Feature::Swap(INF_Desc_INF_Feature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void INF_Desc_INF_Feature::InternalSwap(INF_Desc_INF_Feature* other) {
  std::swap(nobjectid_, other->nobjectid_);
  std::swap(nobjectthreashold_, other->nobjectthreashold_);
  std::swap(nfeatureid_, other->nfeatureid_);
  std::swap(nfeaturethreashold_, other->nfeaturethreashold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata INF_Desc_INF_Feature::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_Desc_INF_Feature_descriptor_;
  metadata.reflection = INF_Desc_INF_Feature_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int INF_Desc::kInputnumFieldNumber;
const int INF_Desc::kBaseFieldNumber;
const int INF_Desc::kFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

INF_Desc::INF_Desc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:INF.INF_Desc)
}

void INF_Desc::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

INF_Desc::INF_Desc(const INF_Desc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:INF.INF_Desc)
}

void INF_Desc::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  inputnum_ = 0;
}

INF_Desc::~INF_Desc() {
  // @@protoc_insertion_point(destructor:INF.INF_Desc)
  SharedDtor();
}

void INF_Desc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void INF_Desc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_Desc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_Desc_descriptor_;
}

const INF_Desc& INF_Desc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_request_2eproto();
  return *default_instance_;
}

INF_Desc* INF_Desc::default_instance_ = NULL;

INF_Desc* INF_Desc::New(::google::protobuf::Arena* arena) const {
  INF_Desc* n = new INF_Desc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void INF_Desc::Clear() {
// @@protoc_insertion_point(message_clear_start:INF.INF_Desc)
  inputnum_ = 0;
  base_.Clear();
  feature_.Clear();
}

bool INF_Desc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:INF.INF_Desc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 inputnum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inputnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_base;
        break;
      }

      // repeated .INF.INF_Desc.INF_Base base = 2;
      case 2: {
        if (tag == 18) {
         parse_base:
          DO_(input->IncrementRecursionDepth());
         parse_loop_base:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_base;
        if (input->ExpectTag(26)) goto parse_loop_feature;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .INF.INF_Desc.INF_Feature feature = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_feature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_feature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_feature;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:INF.INF_Desc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:INF.INF_Desc)
  return false;
#undef DO_
}

void INF_Desc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:INF.INF_Desc)
  // optional int32 inputnum = 1;
  if (this->inputnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->inputnum(), output);
  }

  // repeated .INF.INF_Desc.INF_Base base = 2;
  for (unsigned int i = 0, n = this->base_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->base(i), output);
  }

  // repeated .INF.INF_Desc.INF_Feature feature = 3;
  for (unsigned int i = 0, n = this->feature_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->feature(i), output);
  }

  // @@protoc_insertion_point(serialize_end:INF.INF_Desc)
}

::google::protobuf::uint8* INF_Desc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:INF.INF_Desc)
  // optional int32 inputnum = 1;
  if (this->inputnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->inputnum(), target);
  }

  // repeated .INF.INF_Desc.INF_Base base = 2;
  for (unsigned int i = 0, n = this->base_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->base(i), target);
  }

  // repeated .INF.INF_Desc.INF_Feature feature = 3;
  for (unsigned int i = 0, n = this->feature_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->feature(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:INF.INF_Desc)
  return target;
}

int INF_Desc::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:INF.INF_Desc)
  int total_size = 0;

  // optional int32 inputnum = 1;
  if (this->inputnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inputnum());
  }

  // repeated .INF.INF_Desc.INF_Base base = 2;
  total_size += 1 * this->base_size();
  for (int i = 0; i < this->base_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->base(i));
  }

  // repeated .INF.INF_Desc.INF_Feature feature = 3;
  total_size += 1 * this->feature_size();
  for (int i = 0; i < this->feature_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->feature(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_Desc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:INF.INF_Desc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const INF_Desc* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const INF_Desc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:INF.INF_Desc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:INF.INF_Desc)
    MergeFrom(*source);
  }
}

void INF_Desc::MergeFrom(const INF_Desc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:INF.INF_Desc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  base_.MergeFrom(from.base_);
  feature_.MergeFrom(from.feature_);
  if (from.inputnum() != 0) {
    set_inputnum(from.inputnum());
  }
}

void INF_Desc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:INF.INF_Desc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_Desc::CopyFrom(const INF_Desc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:INF.INF_Desc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_Desc::IsInitialized() const {

  return true;
}

void INF_Desc::Swap(INF_Desc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void INF_Desc::InternalSwap(INF_Desc* other) {
  std::swap(inputnum_, other->inputnum_);
  base_.UnsafeArenaSwap(&other->base_);
  feature_.UnsafeArenaSwap(&other->feature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata INF_Desc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_Desc_descriptor_;
  metadata.reflection = INF_Desc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// INF_Desc_INF_Base

// optional int64 nBaseID = 1;
void INF_Desc_INF_Base::clear_nbaseid() {
  nbaseid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 INF_Desc_INF_Base::nbaseid() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.INF_Base.nBaseID)
  return nbaseid_;
}
 void INF_Desc_INF_Base::set_nbaseid(::google::protobuf::int64 value) {
  
  nbaseid_ = value;
  // @@protoc_insertion_point(field_set:INF.INF_Desc.INF_Base.nBaseID)
}

// optional string strBaseName = 2;
void INF_Desc_INF_Base::clear_strbasename() {
  strbasename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& INF_Desc_INF_Base::strbasename() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.INF_Base.strBaseName)
  return strbasename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void INF_Desc_INF_Base::set_strbasename(const ::std::string& value) {
  
  strbasename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:INF.INF_Desc.INF_Base.strBaseName)
}
 void INF_Desc_INF_Base::set_strbasename(const char* value) {
  
  strbasename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:INF.INF_Desc.INF_Base.strBaseName)
}
 void INF_Desc_INF_Base::set_strbasename(const char* value, size_t size) {
  
  strbasename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:INF.INF_Desc.INF_Base.strBaseName)
}
 ::std::string* INF_Desc_INF_Base::mutable_strbasename() {
  
  // @@protoc_insertion_point(field_mutable:INF.INF_Desc.INF_Base.strBaseName)
  return strbasename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* INF_Desc_INF_Base::release_strbasename() {
  // @@protoc_insertion_point(field_release:INF.INF_Desc.INF_Base.strBaseName)
  
  return strbasename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void INF_Desc_INF_Base::set_allocated_strbasename(::std::string* strbasename) {
  if (strbasename != NULL) {
    
  } else {
    
  }
  strbasename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbasename);
  // @@protoc_insertion_point(field_set_allocated:INF.INF_Desc.INF_Base.strBaseName)
}

// optional int32 nBaseThreashold = 3;
void INF_Desc_INF_Base::clear_nbasethreashold() {
  nbasethreashold_ = 0;
}
 ::google::protobuf::int32 INF_Desc_INF_Base::nbasethreashold() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.INF_Base.nBaseThreashold)
  return nbasethreashold_;
}
 void INF_Desc_INF_Base::set_nbasethreashold(::google::protobuf::int32 value) {
  
  nbasethreashold_ = value;
  // @@protoc_insertion_point(field_set:INF.INF_Desc.INF_Base.nBaseThreashold)
}

// optional int32 nStatus = 4;
void INF_Desc_INF_Base::clear_nstatus() {
  nstatus_ = 0;
}
 ::google::protobuf::int32 INF_Desc_INF_Base::nstatus() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.INF_Base.nStatus)
  return nstatus_;
}
 void INF_Desc_INF_Base::set_nstatus(::google::protobuf::int32 value) {
  
  nstatus_ = value;
  // @@protoc_insertion_point(field_set:INF.INF_Desc.INF_Base.nStatus)
}

// optional int32 nLoadMode = 5;
void INF_Desc_INF_Base::clear_nloadmode() {
  nloadmode_ = 0;
}
 ::google::protobuf::int32 INF_Desc_INF_Base::nloadmode() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.INF_Base.nLoadMode)
  return nloadmode_;
}
 void INF_Desc_INF_Base::set_nloadmode(::google::protobuf::int32 value) {
  
  nloadmode_ = value;
  // @@protoc_insertion_point(field_set:INF.INF_Desc.INF_Base.nLoadMode)
}

// -------------------------------------------------------------------

// INF_Desc_INF_Feature

// optional int64 nObjectID = 1;
void INF_Desc_INF_Feature::clear_nobjectid() {
  nobjectid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 INF_Desc_INF_Feature::nobjectid() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.INF_Feature.nObjectID)
  return nobjectid_;
}
 void INF_Desc_INF_Feature::set_nobjectid(::google::protobuf::int64 value) {
  
  nobjectid_ = value;
  // @@protoc_insertion_point(field_set:INF.INF_Desc.INF_Feature.nObjectID)
}

// optional int32 nObjectThreashold = 2;
void INF_Desc_INF_Feature::clear_nobjectthreashold() {
  nobjectthreashold_ = 0;
}
 ::google::protobuf::int32 INF_Desc_INF_Feature::nobjectthreashold() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.INF_Feature.nObjectThreashold)
  return nobjectthreashold_;
}
 void INF_Desc_INF_Feature::set_nobjectthreashold(::google::protobuf::int32 value) {
  
  nobjectthreashold_ = value;
  // @@protoc_insertion_point(field_set:INF.INF_Desc.INF_Feature.nObjectThreashold)
}

// optional int64 nFeatureID = 3;
void INF_Desc_INF_Feature::clear_nfeatureid() {
  nfeatureid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 INF_Desc_INF_Feature::nfeatureid() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.INF_Feature.nFeatureID)
  return nfeatureid_;
}
 void INF_Desc_INF_Feature::set_nfeatureid(::google::protobuf::int64 value) {
  
  nfeatureid_ = value;
  // @@protoc_insertion_point(field_set:INF.INF_Desc.INF_Feature.nFeatureID)
}

// optional int32 nFeatureThreashold = 4;
void INF_Desc_INF_Feature::clear_nfeaturethreashold() {
  nfeaturethreashold_ = 0;
}
 ::google::protobuf::int32 INF_Desc_INF_Feature::nfeaturethreashold() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.INF_Feature.nFeatureThreashold)
  return nfeaturethreashold_;
}
 void INF_Desc_INF_Feature::set_nfeaturethreashold(::google::protobuf::int32 value) {
  
  nfeaturethreashold_ = value;
  // @@protoc_insertion_point(field_set:INF.INF_Desc.INF_Feature.nFeatureThreashold)
}

// -------------------------------------------------------------------

// INF_Desc

// optional int32 inputnum = 1;
void INF_Desc::clear_inputnum() {
  inputnum_ = 0;
}
 ::google::protobuf::int32 INF_Desc::inputnum() const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.inputnum)
  return inputnum_;
}
 void INF_Desc::set_inputnum(::google::protobuf::int32 value) {
  
  inputnum_ = value;
  // @@protoc_insertion_point(field_set:INF.INF_Desc.inputnum)
}

// repeated .INF.INF_Desc.INF_Base base = 2;
int INF_Desc::base_size() const {
  return base_.size();
}
void INF_Desc::clear_base() {
  base_.Clear();
}
const ::INF::INF_Desc_INF_Base& INF_Desc::base(int index) const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.base)
  return base_.Get(index);
}
::INF::INF_Desc_INF_Base* INF_Desc::mutable_base(int index) {
  // @@protoc_insertion_point(field_mutable:INF.INF_Desc.base)
  return base_.Mutable(index);
}
::INF::INF_Desc_INF_Base* INF_Desc::add_base() {
  // @@protoc_insertion_point(field_add:INF.INF_Desc.base)
  return base_.Add();
}
::google::protobuf::RepeatedPtrField< ::INF::INF_Desc_INF_Base >*
INF_Desc::mutable_base() {
  // @@protoc_insertion_point(field_mutable_list:INF.INF_Desc.base)
  return &base_;
}
const ::google::protobuf::RepeatedPtrField< ::INF::INF_Desc_INF_Base >&
INF_Desc::base() const {
  // @@protoc_insertion_point(field_list:INF.INF_Desc.base)
  return base_;
}

// repeated .INF.INF_Desc.INF_Feature feature = 3;
int INF_Desc::feature_size() const {
  return feature_.size();
}
void INF_Desc::clear_feature() {
  feature_.Clear();
}
const ::INF::INF_Desc_INF_Feature& INF_Desc::feature(int index) const {
  // @@protoc_insertion_point(field_get:INF.INF_Desc.feature)
  return feature_.Get(index);
}
::INF::INF_Desc_INF_Feature* INF_Desc::mutable_feature(int index) {
  // @@protoc_insertion_point(field_mutable:INF.INF_Desc.feature)
  return feature_.Mutable(index);
}
::INF::INF_Desc_INF_Feature* INF_Desc::add_feature() {
  // @@protoc_insertion_point(field_add:INF.INF_Desc.feature)
  return feature_.Add();
}
::google::protobuf::RepeatedPtrField< ::INF::INF_Desc_INF_Feature >*
INF_Desc::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:INF.INF_Desc.feature)
  return &feature_;
}
const ::google::protobuf::RepeatedPtrField< ::INF::INF_Desc_INF_Feature >&
INF_Desc::feature() const {
  // @@protoc_insertion_point(field_list:INF.INF_Desc.feature)
  return feature_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace INF

// @@protoc_insertion_point(global_scope)
